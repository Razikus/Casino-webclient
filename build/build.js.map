{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/communication/CommunicationService.js","src/js/communication/SocketHandler.js","src/js/communication/shared/Action.js","src/js/communication/shared/Response.js","src/js/config/msg.js","src/js/config/msgConfig.js","src/js/config/msg/msg-en.js","src/js/config/msg/msg-pl.js","src/js/config/socketConfig.js","src/js/controllers/Controller.js","src/js/controllers/MessageController.js","src/js/dev/DevService.js","src/js/logger/logger.js","src/js/views/utils/toaster.js"],"names":[],"mappings":"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","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { socketConfiguration } from './config/socketConfig';\r\nimport { Controller } from './controllers/Controller';\r\nimport { getMessageBundle } from './config/msg';\r\n\r\nexport const globals = {\r\n  controller: new Controller(socketConfiguration, getLanguageCode(), getParameters()),\r\n}\r\n\r\nfunction getLanguageCode() {\r\n  return navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\r\n}\r\n\r\nfunction getParameters() {\r\n  let queryDict = {};\r\n  location.search.substr(1).split(\"&\").forEach(function(item) {queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]})\r\n  return queryDict;\r\n}\r\n\r\n\r\n\r\nko.applyBindings(globals.controller);\r\n","import { Action, LoginAction, RegisterAction, ActivateAction, WalletAction } from './shared/Action';\r\n\r\nexport class CommunicationService {\r\n  constructor(socketHandler, controller) {\r\n    this.controller = controller;\r\n    this.socketHandler = socketHandler;\r\n  }\r\n\r\n  send(what) {\r\n    this.socketHandler.send(what);\r\n  }\r\n\r\n  tryRegister(nick, password, email) {\r\n    this.send(JSON.stringify(new RegisterAction(nick, password, email)));\r\n  }\r\n\r\n  tryLogin(nick, password) {\r\n    this.send(JSON.stringify(new LoginAction(nick, password)));\r\n  }\r\n\r\n  tryActivate(GETParameters) {\r\n    if(GETParameters.token !== 'undefined' && GETParameters.nickname !== 'undefined') {\r\n      if(GETParameters.token.length !== 0 && GETParameters.nickname.length !== 0) {\r\n        this.send(JSON.stringify(new ActivateAction(GETParameters.token, GETParameters.nickname)));\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nexport class SocketHandler {\r\n  constructor(controller, config) {\r\n    this.config = config;\r\n    this.onOpen = controller.onOpen;\r\n    this.onClose = controller.onClose;\r\n    this.onMessage = controller.messageController.onMessage;\r\n    this.onError = controller.onError;\r\n    this.controller = controller;\r\n  }\r\n\r\n  initConnection() {\r\n    this._webSocket = new WebSocket(this.config.url);\r\n    this._webSocket.onmessage = this.onMessage;\r\n    this._webSocket.onopen = this.onOpen;\r\n    this._webSocket.onclose = this.onClose;\r\n    this._webSocket.onerror = this.onError;\r\n    this._webSocket.controller = this.controller;\r\n  }\r\n\r\n  send(what) {\r\n    this._webSocket.send(what);\r\n  }\r\n}\r\n","export const actionTypes = {\r\n  register: \"REGISTER\",\r\n  login: \"LOGIN\",\r\n  activate: \"ACCOUNTACTIVATION\",\r\n  walletIncrease: \"WALLETINCREASE\",\r\n}\r\n\r\nexport class Action {\r\n  constructor(type) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class RegisterAction extends Action {\r\n  constructor(login, password, email) {\r\n    super(actionTypes.register);\r\n    this.args = {\r\n      login: login,\r\n      password: password,\r\n      email: email\r\n    }\r\n  }\r\n}\r\n\r\nexport class LoginAction extends Action {\r\n  constructor(login, password) {\r\n    super(actionTypes.login);\r\n    this.args = {\r\n      login: login,\r\n      password: password,\r\n    }\r\n  }\r\n}\r\n\r\nexport class ActivateAction extends Action {\r\n  constructor(token, nickname) {\r\n    super(actionTypes.activate);\r\n    this.args = {\r\n      token: token,\r\n      nickname: nickname,\r\n    }\r\n  }\r\n}\r\n","export class Response {\r\n  constructor(type, description, notifyType, notifyState, args) {\r\n    this.type = type;\r\n    this.description = description;\r\n    this.notifyType = notifyType;\r\n    this.notifyState = notifyState;\r\n    this.args = args;\r\n  }\r\n}\r\n","import { msgConfig } from './msgConfig';\r\nimport { info, warn } from '../logger/logger';\r\n\r\nexport class MessageService {\r\n  constructor(code) {\r\n    this.code = code;\r\n    this.bundle = getMessageBundle(code);\r\n    if(code !== msgConfig.defaultLanguageCode) {\r\n      this.defaultBundle = getMessageBundle(msgConfig.defaultLanguageCode);\r\n    }\r\n  }\r\n\r\n  msg(label) {\r\n    let result = this.bundle.msg[label];\r\n    if(result) {\r\n      return result;\r\n    } else if(this.defaultBundle != undefined && this.defaultBundle.msg[label]) {\r\n      return this.defaultBundle.msg[label];\r\n    } else {\r\n      return `[${label}]`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getMessageBundle(code) {\r\n  info(`Loading msg bundle: ${code}`);\r\n  let bundle = getBundleFor(code);\r\n  if(!bundle) {\r\n    bundle = getBundleFor(msgConfig.defaultLanguage);\r\n    if(bundle) {\r\n      return bundle;\r\n    } else {\r\n      throw \"No default bundle. Check configuration, and files. Aborting\";\r\n    }\r\n  }\r\n  return bundle;\r\n}\r\n\r\nfunction getBundleFor(code) {\r\n  switch(code) {\r\n    case \"en\":\r\n      return require(\"./msg/msg-en.js\");\r\n    case \"pl\":\r\n      return require(\"./msg/msg-pl.js\");\r\n    default:\r\n      warn(`No msg bundle for code: ${code} loading default bundle for language: ${msgConfig.defaultLanguageCode}`);\r\n      return require(msgConfig.defaultLanguagePath);\r\n  }\r\n}\r\n","export const msgConfig = {\r\n  defaultLanguagePath: './msg/msg-en.js',\r\n  defaultLanguageCode: 'en',\r\n}\r\n","export const msg = {\r\n  connected: \"Connected\",\r\n  \"connected-text\": \"Successfully connected to casino, good luck!\",\r\n  \"ERROR\": \"Error\",\r\n  \"EMAIL_OR_LOGIN_EXISTS\" : \"Email or login exists\",\r\n  \"connection\" : \"Connected\",\r\n  \"avalaibleCoinsTitle\" : \"Avalaible chips\",\r\n  \"basketGameBank\" : \"Sum of bank of the 'Basket' game\",\r\n  \"onlinePlayers\" : \"Online players\",\r\n}\r\n","export const msg = {\r\n  connected: \"Połączono!\",\r\n  \"connected-text\": \"Pomyślnie połączono z kasynem!\",\r\n  \"ERROR\": \"Error\",\r\n  \"EMAIL_OR_LOGIN_EXISTS\" : \"Email lub login istnieje\",\r\n  \"connection\" : \"Połączono\",\r\n  \"avalaibleCoinsTitle\" : \"Dostępne żetony\",\r\n  \"basketGameBank\" : \"Pula nagród w grze 'Basket'\",\r\n  \"onlinePlayers\" : \"Grający teraz\",\r\n}\r\n","export const socketConfiguration = {\r\n  url: \"ws://localhost:8080/CasinoServer/casino\",\r\n}\r\n","import { SocketHandler } from '../communication/SocketHandler';\r\nimport { CommunicationService } from '../communication/CommunicationService';\r\nimport { MessageController } from './MessageController';\r\nimport { MessageService } from '../config/msg';\r\nimport { info, warn } from '../logger/logger';\r\nimport { makDefaultInfoToast } from '../views/utils/toaster';\r\nimport { DevService } from '../dev/DevService';\r\n\r\nexport class Controller {\r\n  constructor(config, languageCode, optionalGetParameters) {\r\n    this.messageService = new MessageService(languageCode);\r\n    this.devService = new DevService(this);\r\n    this.messageController = new MessageController(this, this.messageService);\r\n    this.socketConfig = config;\r\n    this.connected = ko.observable(false);\r\n    this.socketHandler = new SocketHandler(this, config);\r\n    this.socketHandler.initConnection();\r\n\r\n    this.connectionStatusClass = ko.pureComputed(function() {\r\n      return this.connected() ? \"fa fa-check-circle-o success\" : 'fa fa-times-circle-o error';\r\n    }, this);\r\n\r\n    this.communicationService = new CommunicationService(this.socketHandler, this);\r\n\r\n    this.subscribe(\"connected\", (value) => {\r\n      if(value) {\r\n        makDefaultInfoToast(this.msg(\"connected\"), this.msg(\"connected-text\"));\r\n        if(optionalGetParameters) {\r\n          this.processGetParameters(optionalGetParameters);\r\n        }\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onOpen(event) {\r\n    info(`Connected to server ${this.controller.socketConfig.url}`);\r\n    this.controller.connected(true);\r\n  }\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onClose(event) {\r\n    warn(\"Server closed connection.\")\r\n    this.controller.connected(false);\r\n  }\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onError(event) {\r\n    warn(\"Something wrong with connection.\")\r\n    this.controller.connected(false);\r\n  }\r\n\r\n  send(what) {\r\n    this.socketHandler.send(what);\r\n  }\r\n\r\n  subscribe(observableName, func) {\r\n    if(this[observableName]) {\r\n      this[observableName].subscribe(func);\r\n    }\r\n  }\r\n\r\n  msg(label) {\r\n    return this.messageService.msg(label);\r\n  }\r\n\r\n  processGetParameters(optionalGetParameters) {\r\n    if(optionalGetParameters.token != undefined && optionalGetParameters.nickname != undefined) {\r\n      this.communicationService.tryActivate(optionalGetParameters);\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import { Response } from '../communication/shared/Response';\r\nimport { makeDefaultToast } from '../views/utils/toaster';\r\n\r\nexport class MessageController {\r\n  constructor(controller, messageService) {\r\n    this.controller = controller;\r\n    this.messageService = messageService;\r\n  }\r\n\r\n  onMessage(event) {\r\n    this.controller.messageController.recognizeEvent(event);\r\n  }\r\n\r\n  recognizeEvent(event) {\r\n    if(event.type === 'message') {\r\n      this.recognizeMessage(event);\r\n    }\r\n  }\r\n\r\n  recognizeMessage(event) {\r\n    let obj = JSON.parse(event.data);\r\n    if(obj.className !== 'undefined') {\r\n      this.recognizeClass(obj);\r\n    }\r\n  }\r\n\r\n  recognizeClass(object) {\r\n    if(object.className === 'Response') {\r\n      let response = new Response(object.type, object.description, object.notifyType, object.notifyState, object.args);\r\n\r\n      if(response.notifyType == \"TOAST\") {\r\n        makeDefaultToast(this.messageService.msg(response.notifyState), this.messageService.msg(response.description), response.notifyState.toLowerCase());\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class DevService {\r\n  constructor(controller) {\r\n    let self = this;\r\n    this.controller = controller;\r\n    this.argName = ko.observable();\r\n    this.argValue = ko.observable();\r\n\r\n    this.devAction = ko.observable({\r\n      type: ko.observable(\"\"),\r\n      args: ko.observable({}),\r\n    });\r\n    this.devJson = ko.computed(function() {\r\n        return ko.toJSON(this.devAction());\r\n    }, this);\r\n\r\n    this.addArg = function() {\r\n      let current = self.devAction().args();\r\n      let index = self.argName();\r\n      current[index] = ko.observable(self.argValue());\r\n      self.devAction().args(current);\r\n    };\r\n    this.devArgs = ko.computed(function() {\r\n        let args = self.devAction().args();\r\n        return Object.keys(args);\r\n    }, this);\r\n    this.devSend = function() {\r\n      self.controller.send(self.devJson());\r\n    };\r\n    this.devValueFor = function(key) {\r\n      return self.devAction().args()[key];\r\n    }\r\n    this.removeArg = function(key) {\r\n      let current = self.devAction().args();\r\n      let index = key;\r\n      delete current[index];\r\n      self.devAction().args(current);\r\n    }\r\n    let randomString = this.randomString(8);\r\n\r\n    this.actions = [\r\n      { type: ko.observable(\"REGISTER\"), args: ko.observable({ login: ko.observable(randomString), password: ko.observable(randomString), email: ko.observable(\"\")})},\r\n      { type: ko.observable(\"LOGIN\"), args: ko.observable({ login: ko.observable(randomString), password: ko.observable(randomString)})},\r\n      { type: ko.observable(\"ACCOUNTACTIVATION\"), args: ko.observable({ token: ko.observable(\"\"), nickname: ko.observable(randomString)})},\r\n      { type: ko.observable(\"PASSWORDCHANGEREQUEST\"), args: ko.observable({ email: ko.observable(\"\"), newpassword: ko.observable(this.randomString(5))})},\r\n      { type: ko.observable(\"PASSWORDCHANGE\"), args: ko.observable({ email: ko.observable(\"\"), token: ko.observable(\"\")})},\r\n      { type: ko.observable(\"MYOWN\"), args: ko.observable({ })},\r\n\r\n    ]\r\n  }\r\n\r\n  randomString(length) {\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, length);\r\n  }\r\n}\r\n","export function log(what, color) {\r\n  if(color) {\r\n    console.log(\"%c\" + what, \"color: \" + color);\r\n  } else {\r\n    console.log(what);\r\n  }\r\n}\r\n\r\nexport function warn(what) {\r\n  return log(what, \"red\");\r\n}\r\n\r\nexport function info(what) {\r\n  return log(what, \"green\");\r\n}\r\n","export function makeToast(heading, text, icon, hideAfter, position) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: icon,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: hideAfter > 0 ? hideAfter : false,\r\n    stack: 5,\r\n    position: position,\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makeDefaultToast(heading, text, icon) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: icon,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultInfoToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.information,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultSuccessToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.success,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultErrorToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.error,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultWarningToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.warning,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport const iconTypes = {\r\n  error: 'error',\r\n  warning: 'warning',\r\n  success: 'success',\r\n  information: 'info',\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}