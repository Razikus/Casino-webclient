{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/js/ComponentsRegisterer.js","src/js/app.js","src/js/communication/CommunicationService.js","src/js/communication/SocketHandler.js","src/js/communication/shared/Action.js","src/js/communication/shared/Response.js","src/js/communication/shared/WebClientAction.js","src/js/config/msg.js","src/js/config/msgConfig.js","src/js/config/msg/msg-en.js","src/js/config/msg/msg-pl.js","src/js/config/socketConfig.js","src/js/controllers/Controller.js","src/js/controllers/MessageController.js","src/js/controllers/ViewController.js","src/js/dev/DevService.js","src/js/logger/logger.js","src/js/views/components/Component.js","src/js/views/components/accountInformation/AccountInformation.js","src/js/views/components/accountInformation/AccountInformationTemplate.js","src/js/views/components/awesomeButtonLink/AwesomeButtonLink.js","src/js/views/components/awesomeButtonLink/AwesomeButtonLinkTemplate.js","src/js/views/components/casinoview/CasinoView.js","src/js/views/components/casinoview/CasinoViewTemplate.js","src/js/views/components/loginForm/LoginForm.js","src/js/views/components/loginForm/LoginFormTemplate.js","src/js/views/components/passwordChangeForm/PasswordChangeForm.js","src/js/views/components/passwordChangeForm/PasswordChangeFormTemplate.js","src/js/views/components/registerForm/RegisterForm.js","src/js/views/components/registerForm/RegisterFormTemplate.js","src/js/views/utils/toaster.js"],"names":[],"mappings":"AAAA;;;;;;;;;;ACAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAGa,oB,WAAA,oB;AACX,kCAAc;AAAA;;AACZ,SAAK,gBAAL,GAAwB,EAAxB;AACD;;;;yCAEoB;AACnB,WAAK,uBAAL,CAA6B,0CAA7B;AACA,WAAK,uBAAL,CAA6B,4BAA7B;AACA,WAAK,uBAAL,CAA6B,0BAA7B;AACA,WAAK,uBAAL,CAA6B,gCAA7B;AACA,WAAK,uBAAL,CAA6B,4CAA7B;AACA,WAAK,uBAAL,CAA6B,4CAA7B;AAED;;;4CAEuB,S,EAAW;AACjC,gBAAU,iBAAV;AACA,WAAK,gBAAL,CAAsB,IAAtB,CAA2B,SAA3B;AACA,yCAAoB,UAAU,WAA9B;AACD;;;;;;;;;;;;;;AC5BH;;AACA;;AACA;;AACA;;AAEO,IAAM,4BAAU;AACrB,cAAY,8DAAoC,iBAApC,EAAuD,eAAvD,CADS;AAErB,wBAAsB;AAFD,CAAhB;;AAKP,SAAS,eAAT,GAA2B;AACzB,SAAO,UAAU,SAAV,GAAsB,UAAU,SAAV,CAAoB,CAApB,CAAtB,GAAgD,UAAU,QAAV,IAAsB,UAAU,YAAvF;AACD;;AAED,SAAS,aAAT,GAAyB;AACvB,MAAI,YAAY,EAAhB;AACA,WAAS,MAAT,CAAgB,MAAhB,CAAuB,CAAvB,EAA0B,KAA1B,CAAgC,GAAhC,EAAqC,OAArC,CAA6C,UAAS,IAAT,EAAe;AAAC,cAAU,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAV,IAAgC,KAAK,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAhC;AAAmD,GAAhH;AACA,SAAO,SAAP;AACD;;AAGD,QAAQ,oBAAR,CAA6B,kBAA7B;;AAEA,GAAG,aAAH,CAAiB,QAAQ,UAAzB;;;;;;;;;;;;ACvBA;;;;IAEa,oB,WAAA,oB;AACX,gCAAY,aAAZ,EAA2B,UAA3B,EAAuC;AAAA;;AACrC,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,aAAL,GAAqB,aAArB;AACD;;;;yBAEI,I,EAAM;AACT,WAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AACD;;;gCAEW,I,EAAM,Q,EAAU,K,EAAO;AACjC,WAAK,IAAL,CAAU,KAAK,SAAL,CAAe,2BAAmB,IAAnB,EAAyB,QAAzB,EAAmC,KAAnC,CAAf,CAAV;AACD;;;6BAEQ,I,EAAM,Q,EAAU;AACvB,WAAK,IAAL,CAAU,KAAK,SAAL,CAAe,wBAAgB,IAAhB,EAAsB,QAAtB,CAAf,CAAV;AACD;;;sCAEiB,K,EAAO,W,EAAa;AACpC,WAAK,IAAL,CAAU,KAAK,SAAL,CAAe,wCAAgC,KAAhC,EAAuC,WAAvC,CAAf,CAAV;AACD;;;gCAEW,a,EAAe;AACzB,UAAG,cAAc,KAAd,KAAwB,WAAxB,IAAuC,cAAc,QAAd,KAA2B,WAArE,EAAkF;AAChF,YAAG,cAAc,KAAd,CAAoB,MAApB,KAA+B,CAA/B,IAAoC,cAAc,QAAd,CAAuB,MAAvB,KAAkC,CAAzE,EAA4E;AAC1E,eAAK,IAAL,CAAU,KAAK,SAAL,CAAe,2BAAmB,cAAc,KAAjC,EAAwC,cAAc,QAAtD,CAAf,CAAV;AACD;AACF;AACF;;;wCAEmB,a,EAAe;AACjC,UAAG,cAAc,KAAd,KAAwB,WAAxB,IAAuC,cAAc,KAAd,KAAwB,WAAlE,EAA+E;AAC7E,YAAG,cAAc,KAAd,CAAoB,MAApB,KAA+B,CAA/B,IAAoC,cAAc,KAAd,CAAoB,MAApB,KAA+B,CAAtE,EAAyE;AACvE,eAAK,IAAL,CAAU,KAAK,SAAL,CAAe,iCAAyB,cAAc,KAAvC,EAA8C,cAAc,KAA5D,CAAf,CAAV;AACD;AACF;AACF;;;;;;;;;;;;;;;;;ICrCU,a,WAAA,a;AACX,yBAAY,UAAZ,EAAwB,MAAxB,EAAgC;AAAA;;AAC9B,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,WAAW,MAAzB;AACA,SAAK,OAAL,GAAe,WAAW,OAA1B;AACA,SAAK,SAAL,GAAiB,WAAW,iBAAX,CAA6B,SAA9C;AACA,SAAK,OAAL,GAAe,WAAW,OAA1B;AACA,SAAK,UAAL,GAAkB,UAAlB;AACD;;;;qCAEgB;AACf,WAAK,UAAL,GAAkB,IAAI,SAAJ,CAAc,KAAK,MAAL,CAAY,GAA1B,CAAlB;AACA,WAAK,UAAL,CAAgB,SAAhB,GAA4B,KAAK,SAAjC;AACA,WAAK,UAAL,CAAgB,MAAhB,GAAyB,KAAK,MAA9B;AACA,WAAK,UAAL,CAAgB,OAAhB,GAA0B,KAAK,OAA/B;AACA,WAAK,UAAL,CAAgB,OAAhB,GAA0B,KAAK,OAA/B;AACA,WAAK,UAAL,CAAgB,UAAhB,GAA6B,KAAK,UAAlC;AACD;;;yBAEI,I,EAAM;AACT,WAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACD;;;;;;;;;;;;;;;;;;;ACtBI,IAAM,oCAAc;AACzB,YAAU,UADe;AAEzB,SAAO,OAFkB;AAGzB,YAAU,mBAHe;AAIzB,yBAAuB,uBAJE;AAKzB,kBAAgB,gBALS;AAMzB,WAAS;AANgB,CAApB;;IASM,M,WAAA,M,GACX,gBAAY,IAAZ,EAAkB;AAAA;;AAChB,OAAK,IAAL,GAAY,IAAZ;AACD,C;;IAGU,c,WAAA,c;;;AACX,0BAAY,KAAZ,EAAmB,QAAnB,EAA6B,KAA7B,EAAoC;AAAA;;AAAA,gIAC5B,YAAY,QADgB;;AAElC,UAAK,IAAL,GAAY;AACV,aAAO,KADG;AAEV,gBAAU,OAAO,QAAP,CAFA;AAGV,aAAO;AAHG,KAAZ;AAFkC;AAOnC;;;EARiC,M;;IAWvB,W,WAAA,W;;;AACX,uBAAY,KAAZ,EAAmB,QAAnB,EAA6B;AAAA;;AAAA,2HACrB,YAAY,KADS;;AAE3B,WAAK,IAAL,GAAY;AACV,aAAO,KADG;AAEV,gBAAU,OAAO,QAAP;AAFA,KAAZ;AAF2B;AAM5B;;;EAP8B,M;;IAUpB,c,WAAA,c;;;AACX,0BAAY,KAAZ,EAAmB,QAAnB,EAA6B;AAAA;;AAAA,iIACrB,YAAY,QADS;;AAE3B,WAAK,IAAL,GAAY;AACV,aAAO,KADG;AAEV,gBAAU;AAFA,KAAZ;AAF2B;AAM5B;;;EAPiC,M;;IAUvB,2B,WAAA,2B;;;AACX,uCAAY,KAAZ,EAAmB,WAAnB,EAAgC;AAAA;;AAAA,2JACxB,YAAY,qBADY;;AAE9B,WAAK,IAAL,GAAY;AACV,aAAO,KADG;AAEV,mBAAa,OAAO,WAAP;AAFH,KAAZ;AAF8B;AAM/B;;;EAP8C,M;;IAUpC,oB,WAAA,oB;;;AACX,gCAAY,KAAZ,EAAmB,KAAnB,EAA0B;AAAA;;AAAA,6IAClB,YAAY,cADM;;AAExB,WAAK,IAAL,GAAY;AACV,aAAO,KADG;AAEV,aAAO;AAFG,KAAZ;AAFwB;AAMzB;;;EAPuC,M;;IAU7B,a,WAAA,a;;;AACX,yBAAY,GAAZ,EAAiB;AAAA;;AAAA,+HACT,YAAY,OADH;;AAEf,WAAK,IAAL,GAAY;AACV,WAAK;AADK,KAAZ;AAFe;AAKhB;;;EANgC,M;;;;;;;;;;;IClEtB,Q,WAAA,Q,GACX,kBAAY,IAAZ,EAAkB,WAAlB,EAA+B,UAA/B,EAA2C,WAA3C,EAAwD,IAAxD,EAA8D;AAAA;;AAC5D,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,UAAL,GAAkB,UAAlB;AACA,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,IAAL,GAAY,IAAZ;AACD,C;;;;;;;;;;;ICPU,e,WAAA,e,GACX,yBAAY,IAAZ,EAAkB,IAAlB,EAAwB;AAAA;;AACtB,OAAK,IAAL,GAAY,IAAZ;AACA,OAAK,IAAL,GAAY,IAAZ;AACD,C;;;;;;;;;;;;QCoBa,gB,GAAA,gB;;AAxBhB;;AACA;;;;IAEa,c,WAAA,c;AACX,0BAAY,IAAZ,EAAkB;AAAA;;AAChB,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,MAAL,GAAc,iBAAiB,IAAjB,CAAd;AACA,QAAG,SAAS,qBAAU,mBAAtB,EAA2C;AACzC,WAAK,aAAL,GAAqB,iBAAiB,qBAAU,mBAA3B,CAArB;AACD;AACF;;;;wBAEG,K,EAAO;AACT,UAAI,SAAS,KAAK,MAAL,CAAY,GAAZ,CAAgB,KAAhB,CAAb;AACA,UAAG,MAAH,EAAW;AACT,eAAO,MAAP;AACD,OAFD,MAEO,IAAG,KAAK,aAAL,IAAsB,SAAtB,IAAmC,KAAK,aAAL,CAAmB,GAAnB,CAAuB,KAAvB,CAAtC,EAAqE;AAC1E,eAAO,KAAK,aAAL,CAAmB,GAAnB,CAAuB,KAAvB,CAAP;AACD,OAFM,MAEA;AACL,qBAAW,KAAX;AACD;AACF;;;;;;AAGI,SAAS,gBAAT,CAA0B,IAA1B,EAAgC;AACrC,6CAA4B,IAA5B;AACA,MAAI,SAAS,aAAa,IAAb,CAAb;AACA,MAAG,CAAC,MAAJ,EAAY;AACV,aAAS,aAAa,qBAAU,eAAvB,CAAT;AACA,QAAG,MAAH,EAAW;AACT,aAAO,MAAP;AACD,KAFD,MAEO;AACL,YAAM,6DAAN;AACD;AACF;AACD,SAAO,MAAP;AACD;;AAED,SAAS,YAAT,CAAsB,IAAtB,EAA4B;AAC1B,UAAO,IAAP;AACE,SAAK,IAAL;AACE,aAAO,QAAQ,iBAAR,CAAP;AACF,SAAK,IAAL;AACE,aAAO,QAAQ,iBAAR,CAAP;AACF;AACE,qDAAgC,IAAhC,8CAA6E,qBAAU,mBAAvF;AACA,aAAO,QAAQ,qBAAU,mBAAlB,CAAP;AAPJ;AASD;;;;;;;;AChDM,IAAM,gCAAY;AACvB,uBAAqB,iBADE;AAEvB,uBAAqB;AAFE,CAAlB;;;;;;;;ACAA,IAAM,oBAAM;AACjB,aAAW,WADM;AAEjB,oBAAkB,8CAFD;AAGjB,WAAS,OAHQ;AAIjB,2BAA0B,uBAJT;AAKjB,gBAAe,WALE;AAMjB,yBAAwB,iBANP;AAOjB,oBAAmB,kCAPF;AAQjB,mBAAkB,gBARD;AASjB,aAAY,SATK;AAUjB,cAAa,UAVI;AAWjB,YAAW,aAXM;AAYjB,YAAW,QAZM;AAajB,UAAS,MAbQ;AAcjB,gBAAe,eAdE;AAejB,wBAAuB,6BAfN;AAgBjB,mBAAkB,sCAhBD;AAiBjB,2BAA0B,yCAjBT;AAkBjB,2BAA0B,wBAlBT;AAmBjB,uBAAsB,mBAnBL;AAoBjB,4BAA2B,yCApBV;AAqBjB,qBAAoB,yEArBH;AAsBjB,aAAY,UAtBK;AAuBjB,uDAAsD,sDAvBrC;AAwBjB,gEAA+D,gDAxB9C;AAyBjB,+BAA8B,mBAzBb;AA0BjB,eAAc,YA1BG;AA2BjB,cAAa,UA3BI;AA4BjB,cAAa,UA5BI;AA6BjB,WAAU,QA7BO;AA8BjB,cAAa,UA9BI;AA+BjB,WAAU,OA/BO;AAgCjB,+BAA8B,iCAhCb;AAiCjB,kCAAiC,oCAjChB;AAkCjB,wCAAuC,2CAlCtB;AAmCjB,iBAAgB,cAnCC;AAoCjB,iBAAgB,cApCC;AAqCjB,2BAA0B,uBArCT;AAsCjB,oBAAmB,iBAtCF;AAuCjB,yBAAwB,sBAvCP;AAwCjB,cAAa,UAxCI;AAyCjB,eAAc,WAzCG;AA0CjB,aAAY;AA1CK,CAAZ;;;;;;;;ACAA,IAAM,oBAAM;AACjB,aAAW,YADM;AAEjB,oBAAkB,gCAFD;AAGjB,WAAS,OAHQ;AAIjB,2BAA0B,0BAJT;AAKjB,gBAAe,WALE;AAMjB,yBAAwB,iBANP;AAOjB,oBAAmB,6BAPF;AAQjB,mBAAkB,eARD;AASjB,aAAY,OATK;AAUjB,cAAa,WAVI;AAWjB,YAAW,WAXM;AAYjB,YAAW,UAZM;AAajB,UAAS,QAbQ;AAcjB,gBAAe,cAdE;AAejB,wBAAuB;AAfN,CAAZ;;;;;;;;ACAA,IAAM,oDAAsB;AACjC,OAAK;AAD4B,CAA5B;;;;;;;;;;;;ACAP;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;IAEa,U,WAAA,U;AACX,sBAAY,MAAZ,EAAoB,YAApB,EAAkC,qBAAlC,EAAyD;AAAA;;AAAA;;AACvD,SAAK,cAAL,GAAsB,wBAAmB,YAAnB,CAAtB;AACA,SAAK,UAAL,GAAkB,2BAAe,IAAf,CAAlB;AACA,SAAK,cAAL,GAAsB,mCAAmB,IAAnB,CAAtB;AACA,SAAK,iBAAL,GAAyB,yCAAsB,IAAtB,EAA4B,KAAK,cAAjC,CAAzB;AACA,SAAK,YAAL,GAAoB,MAApB;AACA,SAAK,SAAL,GAAiB,GAAG,UAAH,CAAc,KAAd,CAAjB;AACA,SAAK,aAAL,GAAqB,iCAAkB,IAAlB,EAAwB,MAAxB,CAArB;AACA,SAAK,aAAL,CAAmB,cAAnB;;AAEA,SAAK,OAAL,GAAe,GAAG,UAAH,CAAc,KAAK,GAAL,CAAS,WAAT,CAAd,CAAf;;AAEA,SAAK,KAAL,GAAa,GAAG,UAAH,CAAc,WAAd,CAAb;AACA,SAAK,WAAL,GAAmB,GAAG,QAAH,CAAY,YAAM;AACjC,aAAO,MAAK,KAAL,MAAgB,WAAvB;AACH,KAFkB,EAEhB,IAFgB,CAAnB;;AAIA,SAAK,qBAAL,GAA6B,GAAG,YAAH,CAAgB,YAAW;AACtD,aAAO,KAAK,SAAL,KAAmB,8BAAnB,GAAoD,4BAA3D;AACD,KAF4B,EAE1B,IAF0B,CAA7B;;AAIA,SAAK,YAAL,GAAoB,GAAG,UAAH,CAAc,KAAK,GAAL,CAAS,YAAT,CAAd,CAApB;;AAEA,SAAK,oBAAL,GAA4B,+CAAyB,KAAK,aAA9B,EAA6C,IAA7C,CAA5B;;AAEA,SAAK,YAAL,GAAoB,UAAS,IAAT,EAAe;AAAA;;AACjC,aAAO,UAAC,KAAD,EAAW;AAChB,eAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B;AACD,OAFD;AAGD,KAJD;;AAOA,SAAK,SAAL,CAAe,WAAf,EAA4B,UAAC,KAAD,EAAW;AACrC,UAAG,KAAH,EAAU;AACR,0CAAoB,MAAK,GAAL,CAAS,WAAT,CAApB,EAA2C,MAAK,GAAL,CAAS,gBAAT,CAA3C;AACA,YAAG,qBAAH,EAA0B;AACxB,gBAAK,oBAAL,CAA0B,qBAA1B;AACD;AACF;AACF,KAPD;;AASA,SAAK,kBAAL,GAA0B;AACxB,gBAAU,GAAG,UAAH,CAAc,EAAd,CADc;AAExB,aAAO,GAAG,UAAH,CAAc,EAAd,CAFiB;AAGxB,iBAAW,GAAG,UAAH,CAAc,EAAd;AAHa,KAA1B;AAMD;;AAED;;;;;2BACO,K,EAAO;AACZ,iDAA4B,KAAK,UAAL,CAAgB,YAAhB,CAA6B,GAAzD;AACA,WAAK,UAAL,CAAgB,SAAhB,CAA0B,IAA1B;AACD;AACD;;;;4BACQ,K,EAAO;AACb,wBAAK,2BAAL;AACA,WAAK,UAAL,CAAgB,SAAhB,CAA0B,KAA1B;AACD;AACD;;;;4BACQ,K,EAAO;AACb,wBAAK,kCAAL;AACA,WAAK,UAAL,CAAgB,SAAhB,CAA0B,KAA1B;AACD;;;yBAEI,I,EAAM;AACT,WAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AACD;;;8BAES,c,EAAgB,I,EAAM;AAC9B,UAAG,KAAK,cAAL,CAAH,EAAyB;AACvB,aAAK,cAAL,EAAqB,SAArB,CAA+B,IAA/B;AACD;AACF;;;wBAEG,K,EAAO;AACT,aAAO,KAAK,cAAL,CAAoB,GAApB,CAAwB,KAAxB,CAAP;AACD;;;yCAEoB,qB,EAAuB;AAC1C,UAAG,sBAAsB,KAAtB,IAA+B,SAAlC,EAA6C;AAC3C,YAAG,sBAAsB,QAAtB,IAAkC,SAArC,EAAgD;AAC9C,eAAK,oBAAL,CAA0B,WAA1B,CAAsC,qBAAtC;AACD,SAFD,MAEO,IAAG,sBAAsB,KAAtB,IAA+B,SAAlC,EAA6C;AAClD,eAAK,oBAAL,CAA0B,mBAA1B,CAA8C,qBAA9C;AACD;AACF;AACF;;;;;;;;;;;;;;;;ACjGH;;AACA;;AACA;;AACA;;;;IAEa,iB,WAAA,iB;AACX,6BAAY,UAAZ,EAAwB,cAAxB,EAAwC;AAAA;;AACtC,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,cAAL,GAAsB,cAAtB;AACD;;;;8BAES,K,EAAO;AACf,WAAK,UAAL,CAAgB,iBAAhB,CAAkC,cAAlC,CAAiD,KAAjD;AACD;;;mCAEc,K,EAAO;AACpB,UAAG,MAAM,IAAN,KAAe,SAAlB,EAA6B;AAC3B,aAAK,gBAAL,CAAsB,KAAtB;AACD;AACF;;;qCAEgB,K,EAAO;AACtB,UAAI,MAAM,KAAK,KAAL,CAAW,MAAM,IAAjB,CAAV;AACA,UAAG,IAAI,SAAJ,KAAkB,WAArB,EAAkC;AAChC,aAAK,cAAL,CAAoB,GAApB;AACD,OAFD,MAEO;AACL,0BAAK,wBAAwB,MAAM,IAAnC;AACD;AACF;;;mCAEc,M,EAAQ;AACrB,UAAG,OAAO,SAAP,KAAqB,UAAxB,EAAoC;AAClC,YAAI,WAAW,uBAAa,OAAO,IAApB,EAA0B,OAAO,WAAjC,EAA8C,OAAO,UAArD,EAAiE,OAAO,WAAxE,EAAqF,OAAO,IAA5F,CAAf;AACA,aAAK,iBAAL,CAAuB,QAAvB;AACD,OAHD,MAGO,IAAG,OAAO,SAAP,KAAqB,iBAAxB,EAA2C;AAChD,YAAI,SAAS,qCAAoB,OAAO,IAA3B,EAAiC,OAAO,IAAxC,CAAb;AACA,aAAK,eAAL,CAAqB,MAArB;AACD,OAHM,MAGA;AACL,YAAG,OAAO,SAAV,EAAqB;AACnB,4BAAK,wBAAwB,OAAO,SAApC;AACD;AACF;AACF;;;sCAEiB,c,EAAgB;AAChC,UAAG,eAAe,UAAf,IAA6B,OAAhC,EAAyC;AACvC,uCAAiB,KAAK,cAAL,CAAoB,GAApB,CAAwB,eAAe,WAAvC,CAAjB,EAAsE,KAAK,cAAL,CAAoB,GAApB,CAAwB,eAAe,WAAvC,CAAtE,EAA2H,eAAe,WAAf,CAA2B,WAA3B,EAA3H;AACD;AACF;;;oCAEe,M,EAAQ;AACtB,UAAG,OAAO,IAAP,KAAgB,cAAnB,EAAmC;AACjC,aAAK,UAAL,CAAgB,YAAhB,CAA6B,OAAO,IAAP,CAAY,OAAzC;AACD,OAFD,MAEO,IAAG,OAAO,IAAP,KAAgB,cAAnB,EAAmC;AACxC,aAAK,UAAL,CAAgB,OAAhB,CAAwB,OAAO,IAAP,CAAY,KAApC;AACD,OAFM,MAEA,IAAG,OAAO,IAAP,KAAgB,cAAnB,EAAmC;AACxC,aAAK,UAAL,CAAgB,KAAhB,CAAsB,OAAO,IAAP,CAAY,QAAlC;AACD,OAFM,MAEA,IAAG,OAAO,IAAP,KAAgB,oBAAnB,EAAyC;AAC9C,aAAK,UAAL,CAAgB,kBAAhB,CAAmC,QAAnC,CAA4C,OAAO,IAAP,CAAY,QAAxD;AACA,aAAK,UAAL,CAAgB,kBAAhB,CAAmC,KAAnC,CAAyC,OAAO,IAAP,CAAY,KAArD;AACA,aAAK,UAAL,CAAgB,kBAAhB,CAAmC,SAAnC,CAA8C,OAAO,IAAP,CAAY,SAA1D;AACD;AACF;;;;;;;;;;;;;;;;;AC9DI,IAAM,wBAAQ;AACnB,YAAU,EAAC,MAAM,UAAP,EAAmB,QAAQ,KAA3B,EADS;AAEnB,WAAS,EAAC,MAAM,SAAP,EAAkB,QAAQ,KAA1B,EAFU;AAGnB,YAAU,EAAC,MAAM,UAAP,EAAmB,QAAQ,KAA3B,EAHS;AAInB,UAAQ,EAAC,MAAM,QAAP,EAAiB,QAAQ,IAAzB,EAJW;AAKnB,UAAQ,EAAC,MAAM,QAAP,EAAiB,QAAQ,IAAzB;AALW,CAAd;;IAUM,c,WAAA,c;AACX,0BAAY,cAAZ,EAA4B;AAAA;;AAC1B,SAAK,cAAL,GAAsB,cAAtB;AACA,SAAK,WAAL,GAAmB,GAAG,UAAH,CAAc,MAAM,QAApB,CAAnB;AACD;;;;+BAEU,O,EAAS;AAClB,WAAK,WAAL,CAAiB,KAAK,uBAAL,CAA6B,OAA7B,CAAjB;AACA,UAAG,KAAK,WAAL,GAAmB,MAAtB,EAA8B;AAC5B,YAAI,aAAa,SAAS,cAAT,CAAwB,UAAxB,CAAjB;AACA,YAAI,kBAAkB;AACpB,wBAAc,KADM;AAEpB,uBAAa,KAFO;AAGpB,sBAAY,OAAO,gBAHC;AAIpB,sBAAY;AAJQ,SAAtB;AAMA,YAAI,QAAQ,OAAO,UAAP,GAAoB,OAAO,WAAvC;AACA,YAAI,MAAM,IAAI,KAAK,WAAT,CAAqB,OAAO,UAA5B,EAAwC,OAAO,WAA/C,EAA4D,EAAC,MAAM,UAAP,EAA5D,EAAgF,eAAhF,CAAV;AACA,eAAO,QAAP,GAAkB,UAAS,KAAT,EAAgB;AAC9B,iBAAO,IAAI,QAAX,EAAqB,KAArB;AACH,SAFD;AAGD;AACF;;;4CAEwB,Q,EAAU;AAChC,UAAG,MAAM,QAAN,KAAmB,SAAtB,EAAiC;AAC/B,eAAO,MAAM,QAAb;AACD,OAFD,MAEO;AACL,eAAO,MAAM,SAAS,WAAT,EAAN,CAAP;AACD;AACF;;;;;;;;;;;;;;;;;ICxCS,U,WAAA,U;AACX,sBAAY,UAAZ,EAAwB;AAAA;;AACtB,QAAI,OAAO,IAAX;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,OAAL,GAAe,GAAG,UAAH,EAAf;AACA,SAAK,QAAL,GAAgB,GAAG,UAAH,EAAhB;;AAEA,SAAK,SAAL,GAAiB,GAAG,UAAH,CAAc;AAC7B,YAAM,GAAG,UAAH,CAAc,EAAd,CADuB;AAE7B,YAAM,GAAG,UAAH,CAAc,EAAd;AAFuB,KAAd,CAAjB;AAIA,SAAK,OAAL,GAAe,GAAG,QAAH,CAAY,YAAW;AAClC,aAAO,GAAG,MAAH,CAAU,KAAK,SAAL,EAAV,CAAP;AACH,KAFc,EAEZ,IAFY,CAAf;;AAIA,SAAK,MAAL,GAAc,YAAW;AACvB,UAAI,UAAU,KAAK,SAAL,GAAiB,IAAjB,EAAd;AACA,UAAI,QAAQ,KAAK,OAAL,EAAZ;AACA,cAAQ,KAAR,IAAiB,GAAG,UAAH,CAAc,KAAK,QAAL,EAAd,CAAjB;AACA,WAAK,SAAL,GAAiB,IAAjB,CAAsB,OAAtB;AACD,KALD;AAMA,SAAK,OAAL,GAAe,GAAG,QAAH,CAAY,YAAW;AAClC,UAAI,OAAO,KAAK,SAAL,GAAiB,IAAjB,EAAX;AACA,aAAO,OAAO,IAAP,CAAY,IAAZ,CAAP;AACH,KAHc,EAGZ,IAHY,CAAf;AAIA,SAAK,OAAL,GAAe,YAAW;AACxB,WAAK,UAAL,CAAgB,IAAhB,CAAqB,KAAK,OAAL,EAArB;AACD,KAFD;AAGA,SAAK,WAAL,GAAmB,UAAS,GAAT,EAAc;AAC/B,aAAO,KAAK,SAAL,GAAiB,IAAjB,GAAwB,GAAxB,CAAP;AACD,KAFD;AAGA,SAAK,SAAL,GAAiB,UAAS,GAAT,EAAc;AAC7B,UAAI,UAAU,KAAK,SAAL,GAAiB,IAAjB,EAAd;AACA,UAAI,QAAQ,GAAZ;AACA,aAAO,QAAQ,KAAR,CAAP;AACA,WAAK,SAAL,GAAiB,IAAjB,CAAsB,OAAtB;AACD,KALD;AAMA,QAAI,eAAe,KAAK,YAAL,CAAkB,CAAlB,CAAnB;;AAEA,SAAK,OAAL,GAAe,CACb,EAAE,MAAM,GAAG,UAAH,CAAc,UAAd,CAAR,EAAmC,MAAM,GAAG,UAAH,CAAc,EAAE,OAAO,GAAG,UAAH,CAAc,YAAd,CAAT,EAAsC,UAAU,GAAG,UAAH,CAAc,YAAd,CAAhD,EAA6E,OAAO,GAAG,UAAH,CAAc,EAAd,CAApF,EAAd,CAAzC,EADa,EAEb,EAAE,MAAM,GAAG,UAAH,CAAc,OAAd,CAAR,EAAgC,MAAM,GAAG,UAAH,CAAc,EAAE,OAAO,GAAG,UAAH,CAAc,YAAd,CAAT,EAAsC,UAAU,GAAG,UAAH,CAAc,YAAd,CAAhD,EAAd,CAAtC,EAFa,EAGb,EAAE,MAAM,GAAG,UAAH,CAAc,mBAAd,CAAR,EAA4C,MAAM,GAAG,UAAH,CAAc,EAAE,OAAO,GAAG,UAAH,CAAc,EAAd,CAAT,EAA4B,UAAU,GAAG,UAAH,CAAc,YAAd,CAAtC,EAAd,CAAlD,EAHa,EAIb,EAAE,MAAM,GAAG,UAAH,CAAc,uBAAd,CAAR,EAAgD,MAAM,GAAG,UAAH,CAAc,EAAE,OAAO,GAAG,UAAH,CAAc,EAAd,CAAT,EAA4B,aAAa,GAAG,UAAH,CAAc,KAAK,YAAL,CAAkB,CAAlB,CAAd,CAAzC,EAAd,CAAtD,EAJa,EAKb,EAAE,MAAM,GAAG,UAAH,CAAc,gBAAd,CAAR,EAAyC,MAAM,GAAG,UAAH,CAAc,EAAE,OAAO,GAAG,UAAH,CAAc,EAAd,CAAT,EAA4B,OAAO,GAAG,UAAH,CAAc,EAAd,CAAnC,EAAd,CAA/C,EALa,EAMb,EAAE,MAAM,GAAG,UAAH,CAAc,SAAd,CAAR,EAAkC,MAAM,GAAG,UAAH,CAAc,EAAE,KAAK,GAAG,UAAH,CAAc,EAAd,CAAP,EAAd,CAAxC,EANa,EAOb,EAAE,MAAM,GAAG,UAAH,CAAc,OAAd,CAAR,EAAgC,MAAM,GAAG,UAAH,CAAc,EAAd,CAAtC,EAPa,CAAf;AAUD;;;;iCAEY,M,EAAQ;AACnB,aAAO,KAAK,MAAL,GAAc,QAAd,CAAuB,EAAvB,EAA2B,OAA3B,CAAmC,UAAnC,EAA+C,EAA/C,EAAmD,MAAnD,CAA0D,CAA1D,EAA6D,MAA7D,CAAP;AACD;;;;;;;;;;;;QCrDa,G,GAAA,G;QAQA,I,GAAA,I;QAIA,I,GAAA,I;AAZT,SAAS,GAAT,CAAa,IAAb,EAAmB,KAAnB,EAA0B;AAC/B,MAAG,KAAH,EAAU;AACR,YAAQ,GAAR,CAAY,OAAO,IAAnB,EAAyB,YAAY,KAArC;AACD,GAFD,MAEO;AACL,YAAQ,GAAR,CAAY,IAAZ;AACD;AACF;;AAEM,SAAS,IAAT,CAAc,IAAd,EAAoB;AACzB,SAAO,IAAI,IAAJ,EAAU,KAAV,CAAP;AACD;;AAEM,SAAS,IAAT,CAAc,IAAd,EAAoB;AACzB,SAAO,IAAI,IAAJ,EAAU,OAAV,CAAP;AACD;;;;;;;;;;;;;ICbY,S,WAAA,S;AACX,qBAAY,WAAZ,EAAyB,QAAzB,EAAmC;AAAA;;AACjC,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,QAAL,GAAgB,QAAhB;AACD;;;;wCAEmB;AAClB,SAAG,UAAH,CAAc,QAAd,CAAuB,KAAK,WAA5B,EAAyC,EAAE,WAAW,KAAK,SAAlB,EAA6B,UAAU,KAAK,QAA5C,EAAzC;AACD;;;;;;;;;;;;;;ACTH;;;;;;;;IAEa,kB,WAAA,kB;;;AACX,gCAAc;AAAA;;AAAA,wIACN,oBADM,EACgB,QAAQ,8BAAR,EAAwC,QAAxC,CAAiD,IADjE;;AAEZ,UAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAChC,WAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,WAAK,GAAL,GAAW,UAAS,IAAT,EAAe;AACxB,eAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP;AACD,OAFD;AAID,KAND;AAFY;AASb;;;;;;;;;;;ACZI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;;;ACAP;;;;;;;;IAEa,iB,WAAA,iB;;;AACX,+BAAc;AAAA;;AAAA,sIACN,mBADM,EACe,QAAQ,6BAAR,EAAuC,QAAvC,CAAgD,IAD/D;;AAEZ,UAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAAA;;AAChC,WAAK,YAAL,GAAoB,OAAO,YAA3B;AACA,WAAK,SAAL,GAAiB,OAAO,SAAxB;AACA,WAAK,QAAL,GAAgB,OAAO,QAAvB;AACA,WAAK,UAAL,GAAkB,GAAG,QAAH,CAAY,YAAM;AAClC,eAAO,OAAK,QAAL,KAAkB,SAAlB,IAA+B,OAAK,QAAL,EAAtC;AACD,OAFiB,EAEf,IAFe,CAAlB;AAGA,WAAK,OAAL,GAAe,UAAS,KAAT,EAAgB;AAC7B,YAAG,KAAK,QAAL,KAAkB,SAAlB,IAA+B,KAAK,QAAL,EAAlC,EAAmD;AACjD,iBAAO,SAAP;AACD;AACD,eAAO,OAAO,OAAP,CAAe,KAAf,CAAP;AACD,OALD;AAMA,WAAK,YAAL,GAAoB,OAAO,YAA3B;AACD,KAdD;AAFY;AAiBb;;;;;;;;;;;ACpBI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;;;ACAP;;;;;;;;IAEa,U,WAAA,U;;;AACX,0BAAc;AAAA;;AAAA,4HACN,YADM,EACQ,QAAQ,sBAAR,EAAgC,QAAhC,CAAyC,IADjD;;AAEZ,cAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAAA;;AAChC,iBAAK,WAAL,GAAmB,OAAO,WAA1B;AACA,iBAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,iBAAK,gBAAL,GAAwB,GAAG,QAAH,CAAY,YAAM;AACxC,uBAAO,OAAK,WAAL,GAAmB,MAA1B;AACD,aAFuB,EAErB,IAFqB,CAAxB;AAGA,iBAAK,GAAL,GAAW,UAAS,IAAT,EAAe;AACxB,uBAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP;AACD,aAFD;;AAIA,iBAAK,kBAAL,GAA0B,GAAG,UAAH,CAAc,OAAd,CAA1B;;AAEA,iBAAK,mBAAL,GAA2B,GAAG,QAAH,CAAY,YAAM;AACzC,uBAAO,OAAK,UAAL,CAAgB,WAAhB,MAAiC,OAAK,kBAAL,MAA6B,OAArE;AACH,aAF0B,EAExB,IAFwB,CAA3B;;AAIA,iBAAK,sBAAL,GAA8B,GAAG,QAAH,CAAY,YAAM;AAC5C,uBAAO,OAAK,UAAL,CAAgB,WAAhB,MAAiC,OAAK,kBAAL,MAA6B,UAArE;AACH,aAF6B,EAE3B,IAF2B,CAA9B;;AAIA,iBAAK,4BAAL,GAAoC,GAAG,QAAH,CAAY,YAAM;AAClD,uBAAO,OAAK,UAAL,CAAgB,WAAhB,MAAiC,OAAK,kBAAL,MAA6B,gBAArE;AACH,aAFmC,EAEjC,IAFiC,CAApC;;AAIA,iBAAK,4BAAL,GAAoC,GAAG,QAAH,CAAY,YAAM;AAClD,uBAAO,CAAC,OAAK,UAAL,CAAgB,WAAhB,EAAR;AACH,aAFmC,EAEjC,IAFiC,CAApC;AAID,SA5BD;;AAFY;AAgCb;;;;;;;;;;;ACnCI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;;;ACAP;;;;;;;;IAEa,S,WAAA,S;;;AACX,uBAAc;AAAA;;AAAA,sHACN,WADM,EACO,QAAQ,qBAAR,EAA+B,QAA/B,CAAwC,IAD/C;;AAEZ,UAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAChC,WAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,WAAK,kBAAL,GAA0B,OAAO,kBAAjC;AACA,WAAK,GAAL,GAAW,UAAS,IAAT,EAAe;AACxB,eAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP;AACD,OAFD;AAGA,WAAK,SAAL,GAAiB;AACf,eAAO,GAAG,UAAH,CAAc,EAAd,CADQ;AAEf,kBAAU,GAAG,UAAH,CAAc,EAAd;AAFK,OAAjB;AAIA,WAAK,OAAL,GAAe,YAAW;AACxB,aAAK,UAAL,CAAgB,oBAAhB,CAAqC,QAArC,CAA8C,KAAK,SAAL,CAAe,KAAf,EAA9C,EAAsE,KAAK,SAAL,CAAe,QAAf,EAAtE;AACD,OAFD;;AAIA,WAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB;AACvC,eAAO,YAAW;AAChB,eAAK,kBAAL,CAAwB,KAAxB;AACD,SAFD;AAGD,OAJD;AAMD,KApBD;AAFY;AAuBb;;;;;;;;;;;AC1BI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;;;ACAP;;;;;;;;IAEa,kB,WAAA,kB;;;AACX,gCAAc;AAAA;;AAAA,wIACN,oBADM,EACgB,QAAQ,8BAAR,EAAwC,QAAxC,CAAiD,IADjE;;AAEZ,UAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAChC,WAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,WAAK,kBAAL,GAA0B,OAAO,kBAAjC;AACA,WAAK,GAAL,GAAW,UAAS,IAAT,EAAe;AACxB,eAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP;AACD,OAFD;;AAIA,WAAK,kBAAL,GAA0B;AACxB,eAAO,GAAG,UAAH,CAAc,EAAd,CADiB;AAExB,qBAAa,GAAG,UAAH,CAAc,EAAd;AAFW,OAA1B;;AAKA,WAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB;AACvC,eAAO,YAAW;AAChB,eAAK,kBAAL,CAAwB,KAAxB;AACD,SAFD;AAGD,OAJD;;AAMA,WAAK,gBAAL,GAAwB,YAAW;AACjC,aAAK,UAAL,CAAgB,oBAAhB,CAAqC,iBAArC,CAAuD,KAAK,kBAAL,CAAwB,KAAxB,EAAvD,EAAwF,KAAK,kBAAL,CAAwB,WAAxB,EAAxF;AACD,OAFD;AAID,KAtBD;AAFY;AAyBb;;;;;;;;;;;AC5BI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;;;ACAP;;;;;;;;IAEa,Y,WAAA,Y;;;AACX,0BAAc;AAAA;;AAAA,4HACN,cADM,EACU,QAAQ,wBAAR,EAAkC,QAAlC,CAA2C,IADrD;;AAEZ,UAAK,SAAL,GAAiB,UAAS,MAAT,EAAiB;AAChC,WAAK,UAAL,GAAkB,OAAO,UAAzB;AACA,WAAK,kBAAL,GAA0B,OAAO,kBAAjC;AACA,WAAK,GAAL,GAAW,UAAS,IAAT,EAAe;AACxB,eAAO,KAAK,UAAL,CAAgB,GAAhB,CAAoB,IAApB,CAAP;AACD,OAFD;;AAIA,WAAK,YAAL,GAAoB;AAClB,eAAO,GAAG,UAAH,CAAc,EAAd,CADW;AAElB,kBAAU,GAAG,UAAH,CAAc,EAAd,CAFQ;AAGlB,eAAO,GAAG,UAAH,CAAc,EAAd;AAHW,OAApB;;AAMA,WAAK,iBAAL,GAAyB,UAAS,KAAT,EAAgB;AACvC,eAAO,YAAW;AAChB,eAAK,kBAAL,CAAwB,KAAxB;AACD,SAFD;AAGD,OAJD;;AAMA,WAAK,UAAL,GAAkB,YAAW;AAC3B,aAAK,UAAL,CAAgB,oBAAhB,CAAqC,WAArC,CAAiD,KAAK,YAAL,CAAkB,KAAlB,EAAjD,EAA4E,KAAK,YAAL,CAAkB,QAAlB,EAA5E,EAA0G,KAAK,YAAL,CAAkB,KAAlB,EAA1G;AACD,OAFD;AAID,KAvBD;AAFY;AA0Bb;;;;;;;;;;;AC7BI,IAAM,8BAAW;AACtB;AADsB,CAAjB;;;;;;;;QCAS,S,GAAA,S;QAiBA,gB,GAAA,gB;QAiBA,mB,GAAA,mB;QAiBA,sB,GAAA,sB;QAiBA,oB,GAAA,oB;QAiBA,sB,GAAA,sB;AArFT,SAAS,SAAT,CAAmB,OAAnB,EAA4B,IAA5B,EAAkC,IAAlC,EAAwC,SAAxC,EAAmD,QAAnD,EAA6D;AAClE,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,IAHA;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,YAAY,CAAZ,GAAgB,SAAhB,GAA4B,KANjC;AAON,WAAO,CAPD;AAQN,cAAU,QARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,IAAnC,EAAyC,IAAzC,EAA+C;AACpD,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,IAHA;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,IANL;AAON,WAAO,CAPD;AAQN,cAAU,aARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,SAAS,mBAAT,CAA6B,OAA7B,EAAsC,IAAtC,EAA4C;AACjD,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,UAAU,WAHV;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,IANL;AAON,WAAO,CAPD;AAQN,cAAU,aARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,SAAS,sBAAT,CAAgC,OAAhC,EAAyC,IAAzC,EAA+C;AACpD,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,UAAU,OAHV;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,IANL;AAON,WAAO,CAPD;AAQN,cAAU,aARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,SAAS,oBAAT,CAA8B,OAA9B,EAAuC,IAAvC,EAA6C;AAClD,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,UAAU,KAHV;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,IANL;AAON,WAAO,CAPD;AAQN,cAAU,aARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,SAAS,sBAAT,CAAgC,OAAhC,EAAyC,IAAzC,EAA+C;AACpD,IAAE,KAAF,CAAQ;AACN,UAAM,IADA;AAEN,aAAS,OAFH;AAGN,UAAM,UAAU,OAHV;AAIN,wBAAoB,MAJd;AAKN,qBAAiB,IALX;AAMN,eAAW,IANL;AAON,WAAO,CAPD;AAQN,cAAU,aARJ;;AAUN,eAAW,MAVL;AAWN,YAAQ,IAXF;AAYN,cAAU;AAZJ,GAAR;AAcD;;AAEM,IAAM,gCAAY;AACvB,SAAO,OADgB;AAEvB,WAAS,SAFc;AAGvB,WAAS,SAHc;AAIvB,eAAa;AAJU,CAAlB","file":"build.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { warn, info } from './logger/logger';\r\nimport { AwesomeButtonLink } from './views/components/awesomeButtonLink/AwesomeButtonLink';\r\nimport { CasinoView } from './views/components/casinoview/CasinoView';\r\nimport { LoginForm } from './views/components/loginForm/LoginForm';\r\nimport { RegisterForm } from './views/components/registerForm/RegisterForm';\r\nimport { PasswordChangeForm } from './views/components/passwordChangeForm/PasswordChangeForm';\r\nimport { AccountInformation } from './views/components/accountInformation/AccountInformation';\r\n\r\n\r\nexport class ComponentsRegisterer {\r\n  constructor() {\r\n    this.componentsActive = [];\r\n  }\r\n\r\n  registerComponents() {\r\n    this.registerAndAddComponent(new AwesomeButtonLink());\r\n    this.registerAndAddComponent(new CasinoView());\r\n    this.registerAndAddComponent(new LoginForm());\r\n    this.registerAndAddComponent(new RegisterForm());\r\n    this.registerAndAddComponent(new PasswordChangeForm());\r\n    this.registerAndAddComponent(new AccountInformation());\r\n\r\n  }\r\n\r\n  registerAndAddComponent(component) {\r\n    component.registerComponent();\r\n    this.componentsActive.push(component);\r\n    info(`Registered: ${component.bindingName}`);\r\n  }\r\n}\r\n","import { socketConfiguration } from './config/socketConfig';\r\nimport { Controller } from './controllers/Controller';\r\nimport { getMessageBundle } from './config/msg';\r\nimport { ComponentsRegisterer } from './ComponentsRegisterer';\r\n\r\nexport const globals = {\r\n  controller: new Controller(socketConfiguration, getLanguageCode(), getParameters()),\r\n  componentsRegisterer: new ComponentsRegisterer(),\r\n}\r\n\r\nfunction getLanguageCode() {\r\n  return navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\r\n}\r\n\r\nfunction getParameters() {\r\n  let queryDict = {};\r\n  location.search.substr(1).split(\"&\").forEach(function(item) {queryDict[item.split(\"=\")[0]] = item.split(\"=\")[1]})\r\n  return queryDict;\r\n}\r\n\r\n\r\nglobals.componentsRegisterer.registerComponents();\r\n\r\nko.applyBindings(globals.controller);\r\n","import { Action, LoginAction, RegisterAction, ActivateAction, WalletAction, PasswordChangeRequestAction, PasswordChangeAction } from './shared/Action';\r\n\r\nexport class CommunicationService {\r\n  constructor(socketHandler, controller) {\r\n    this.controller = controller;\r\n    this.socketHandler = socketHandler;\r\n  }\r\n\r\n  send(what) {\r\n    this.socketHandler.send(what);\r\n  }\r\n\r\n  tryRegister(nick, password, email) {\r\n    this.send(JSON.stringify(new RegisterAction(nick, password, email)));\r\n  }\r\n\r\n  tryLogin(nick, password) {\r\n    this.send(JSON.stringify(new LoginAction(nick, password)));\r\n  }\r\n\r\n  tryChangePassword(email, newPassword) {\r\n    this.send(JSON.stringify(new PasswordChangeRequestAction(email, newPassword)));\r\n  }\r\n\r\n  tryActivate(GETParameters) {\r\n    if(GETParameters.token !== 'undefined' && GETParameters.nickname !== 'undefined') {\r\n      if(GETParameters.token.length !== 0 && GETParameters.nickname.length !== 0) {\r\n        this.send(JSON.stringify(new ActivateAction(GETParameters.token, GETParameters.nickname)));\r\n      }\r\n    }\r\n  }\r\n\r\n  tryActivatePassword(GETParameters) {\r\n    if(GETParameters.token !== 'undefined' && GETParameters.email !== 'undefined') {\r\n      if(GETParameters.token.length !== 0 && GETParameters.email.length !== 0) {\r\n        this.send(JSON.stringify(new PasswordChangeAction(GETParameters.email, GETParameters.token)));\r\n      }\r\n    }\r\n  }\r\n}\r\n","\r\nexport class SocketHandler {\r\n  constructor(controller, config) {\r\n    this.config = config;\r\n    this.onOpen = controller.onOpen;\r\n    this.onClose = controller.onClose;\r\n    this.onMessage = controller.messageController.onMessage;\r\n    this.onError = controller.onError;\r\n    this.controller = controller;\r\n  }\r\n\r\n  initConnection() {\r\n    this._webSocket = new WebSocket(this.config.url);\r\n    this._webSocket.onmessage = this.onMessage;\r\n    this._webSocket.onopen = this.onOpen;\r\n    this._webSocket.onclose = this.onClose;\r\n    this._webSocket.onerror = this.onError;\r\n    this._webSocket.controller = this.controller;\r\n  }\r\n\r\n  send(what) {\r\n    this._webSocket.send(what);\r\n  }\r\n}\r\n","export const actionTypes = {\r\n  register: \"REGISTER\",\r\n  login: \"LOGIN\",\r\n  activate: \"ACCOUNTACTIVATION\",\r\n  passwordChangeRequest: \"PASSWORDCHANGEREQUEST\",\r\n  passwordChange: \"PASSWORDCHANGE\",\r\n  gunfire: \"GUNFIRE\",\r\n}\r\n\r\nexport class Action {\r\n  constructor(type) {\r\n    this.type = type;\r\n  }\r\n}\r\n\r\nexport class RegisterAction extends Action {\r\n  constructor(login, password, email) {\r\n    super(actionTypes.register);\r\n    this.args = {\r\n      login: login,\r\n      password: sha256(password),\r\n      email: email\r\n    }\r\n  }\r\n}\r\n\r\nexport class LoginAction extends Action {\r\n  constructor(login, password) {\r\n    super(actionTypes.login);\r\n    this.args = {\r\n      login: login,\r\n      password: sha256(password),\r\n    }\r\n  }\r\n}\r\n\r\nexport class ActivateAction extends Action {\r\n  constructor(token, nickname) {\r\n    super(actionTypes.activate);\r\n    this.args = {\r\n      token: token,\r\n      nickname: nickname,\r\n    }\r\n  }\r\n}\r\n\r\nexport class PasswordChangeRequestAction extends Action {\r\n  constructor(email, newPassword) {\r\n    super(actionTypes.passwordChangeRequest);\r\n    this.args = {\r\n      email: email,\r\n      newPassword: sha256(newPassword),\r\n    }\r\n  }\r\n}\r\n\r\nexport class PasswordChangeAction extends Action {\r\n  constructor(email, token) {\r\n    super(actionTypes.passwordChange);\r\n    this.args = {\r\n      email: email,\r\n      token: token,\r\n    }\r\n  }\r\n}\r\n\r\nexport class GunfireAction extends Action {\r\n  constructor(bid) {\r\n    super(actionTypes.gunfire);\r\n    this.args = {\r\n      bid: bid,\r\n    }\r\n  }\r\n}\r\n","export class Response {\r\n  constructor(type, description, notifyType, notifyState, args) {\r\n    this.type = type;\r\n    this.description = description;\r\n    this.notifyType = notifyType;\r\n    this.notifyState = notifyState;\r\n    this.args = args;\r\n  }\r\n}\r\n","export class WebClientAction {\r\n  constructor(type, args) {\r\n    this.type = type;\r\n    this.args = args;\r\n  }\r\n}\r\n","import { msgConfig } from './msgConfig';\r\nimport { info, warn } from '../logger/logger';\r\n\r\nexport class MessageService {\r\n  constructor(code) {\r\n    this.code = code;\r\n    this.bundle = getMessageBundle(code);\r\n    if(code !== msgConfig.defaultLanguageCode) {\r\n      this.defaultBundle = getMessageBundle(msgConfig.defaultLanguageCode);\r\n    }\r\n  }\r\n\r\n  msg(label) {\r\n    let result = this.bundle.msg[label];\r\n    if(result) {\r\n      return result;\r\n    } else if(this.defaultBundle != undefined && this.defaultBundle.msg[label]) {\r\n      return this.defaultBundle.msg[label];\r\n    } else {\r\n      return `[${label}]`;\r\n    }\r\n  }\r\n}\r\n\r\nexport function getMessageBundle(code) {\r\n  info(`Loading msg bundle: ${code}`);\r\n  let bundle = getBundleFor(code);\r\n  if(!bundle) {\r\n    bundle = getBundleFor(msgConfig.defaultLanguage);\r\n    if(bundle) {\r\n      return bundle;\r\n    } else {\r\n      throw \"No default bundle. Check configuration, and files. Aborting\";\r\n    }\r\n  }\r\n  return bundle;\r\n}\r\n\r\nfunction getBundleFor(code) {\r\n  switch(code) {\r\n    case \"en\":\r\n      return require(\"./msg/msg-en.js\");\r\n    case \"pl\":\r\n      return require(\"./msg/msg-pl.js\");\r\n    default:\r\n      warn(`No msg bundle for code: ${code} loading default bundle for language: ${msgConfig.defaultLanguageCode}`);\r\n      return require(msgConfig.defaultLanguagePath);\r\n  }\r\n}\r\n","export const msgConfig = {\r\n  defaultLanguagePath: './msg/msg-en.js',\r\n  defaultLanguageCode: 'en',\r\n}\r\n","export const msg = {\r\n  connected: \"Connected\",\r\n  \"connected-text\": \"Successfully connected to casino, good luck!\",\r\n  \"ERROR\": \"Error\",\r\n  \"EMAIL_OR_LOGIN_EXISTS\" : \"Email or login exists\",\r\n  \"connection\" : \"Connected\",\r\n  \"avalaibleCoinsTitle\" : \"Avalaible chips\",\r\n  \"basketGameBank\" : \"Sum of bank of the 'Basket' game\",\r\n  \"onlinePlayers\" : \"Online players\",\r\n  \"account\" : \"Account\",\r\n  \"payments\" : \"Payments\",\r\n  \"basket\" : \"Basket game\",\r\n  \"gunner\" : \"Gunner\",\r\n  \"home\" : \"Home\",\r\n  'REFRESHING' : 'Refreshing...',\r\n  'TOKEN_IS_ACTIVATED' : 'Token is already activated.',\r\n  'NOT_ACTIVATED' : 'Account not activated. Check e-mail.',\r\n  'SUCCESSFUL_ACTIVATION' : 'Success activation! You can now log-in.',\r\n  'BAD_NICKNAME_OR_TOKEN' : 'Bad nickname or token.',\r\n  'SUCCESSFULL_LOGIN' : 'Successful login.',\r\n  'SUCCESSFULL_REGISTERED' : 'Succsesful register. Check your e-mail!',\r\n  'UNDEFINED_ERROR' : 'There was a problem... Please try again later or contact administrator.',\r\n  'SUCCESS' : 'Success!',\r\n  'MAIL_WITH_NEXT_STEPS_HAS_BEEN_SENT_TO_YOUR_ADRESS' : 'Mail with next steps has been sended to your e-mail.',\r\n  'SORRY_THERE_IS_AN_PROBLEM_WITH_THIS_ACTION_TRY_AGAIN_LATER' : 'There was a problem... Please try again later.',\r\n  'PASSWORD_HAS_BEEN_CHANGED' : 'Password changed!',\r\n  \"notlogged\" : \"Not logged\",\r\n  \"username\" : \"Username\",\r\n  \"password\" : \"Password\",\r\n  \"email\" : \"E-mail\",\r\n  \"register\" : \"Register\",\r\n  \"login\" : \"Login\",\r\n  \"clickHereIfYouWantToLogin\" : \"Click here if you want to login\",\r\n  \"clickHereIfYouWantToRegister\" : \"Click here if you want to register\",\r\n  \"clickHereIfYouWantToChangePassword\" : \"Click here if you want to change password\",\r\n  \"newPassword\" : \"New password\",\r\n  \"sendRequest\" : \"Send request\",\r\n  \"BAD_LOGIN_OR_PASSWORD\" : \"Bad login or password\",\r\n  \"passwordChange\" : \"Password change\",\r\n  \"accountInformations\" : \"Account informations\",\r\n  \"nickname\" : \"Nickname\",\r\n  \"activated\" : \"Activated\",\r\n  \"balance\" : \"Balance\"\r\n}\r\n","export const msg = {\r\n  connected: \"Połączono!\",\r\n  \"connected-text\": \"Pomyślnie połączono z kasynem!\",\r\n  \"ERROR\": \"Error\",\r\n  \"EMAIL_OR_LOGIN_EXISTS\" : \"Email lub login istnieje\",\r\n  \"connection\" : \"Połączono\",\r\n  \"avalaibleCoinsTitle\" : \"Dostępne żetony\",\r\n  \"basketGameBank\" : \"Pula nagród w grze 'Basket'\",\r\n  \"onlinePlayers\" : \"Grający teraz\",\r\n  \"account\" : \"Konto\",\r\n  \"payments\" : \"Płatności\",\r\n  \"basket\" : \"Koszyczek\",\r\n  \"gunner\" : \"Rewolwer\",\r\n  \"home\" : \"Główna\",\r\n  'REFRESHING' : 'Odświeżam...',\r\n  'TOKEN_IS_ACTIVATED' : 'Token jest już aktywowany.',\r\n}\r\n","export const socketConfiguration = {\r\n  url: \"ws://approxteam.com:8080/CasinoServer/casino\",\r\n}\r\n","import { SocketHandler } from '../communication/SocketHandler';\r\nimport { CommunicationService } from '../communication/CommunicationService';\r\nimport { MessageController } from './MessageController';\r\nimport { ViewController } from './ViewController';\r\nimport { MessageService } from '../config/msg';\r\nimport { info, warn } from '../logger/logger';\r\nimport { makDefaultInfoToast } from '../views/utils/toaster';\r\nimport { DevService } from '../dev/DevService';\r\n\r\nexport class Controller {\r\n  constructor(config, languageCode, optionalGetParameters) {\r\n    this.messageService = new MessageService(languageCode);\r\n    this.devService = new DevService(this);\r\n    this.viewController = new ViewController(this);\r\n    this.messageController = new MessageController(this, this.messageService);\r\n    this.socketConfig = config;\r\n    this.connected = ko.observable(false);\r\n    this.socketHandler = new SocketHandler(this, config);\r\n    this.socketHandler.initConnection();\r\n\r\n    this.balance = ko.observable(this.msg(\"notlogged\"));\r\n\r\n    this.state = ko.observable(\"NOTLOGGED\");\r\n    this.isNotLogged = ko.computed(() => {\r\n        return this.state() == \"NOTLOGGED\";\r\n    }, this);\r\n\r\n    this.connectionStatusClass = ko.pureComputed(function() {\r\n      return this.connected() ? \"fa fa-check-circle-o success\" : 'fa fa-times-circle-o error';\r\n    }, this);\r\n\r\n    this.playersCount = ko.observable(this.msg('REFRESHING'));\r\n\r\n    this.communicationService = new CommunicationService(this.socketHandler, this);\r\n\r\n    this.onSwitchView = function(view) {\r\n      return (event) => {\r\n        this.viewController.switchView(view);\r\n      }\r\n    }\r\n\r\n\r\n    this.subscribe(\"connected\", (value) => {\r\n      if(value) {\r\n        makDefaultInfoToast(this.msg(\"connected\"), this.msg(\"connected-text\"));\r\n        if(optionalGetParameters) {\r\n          this.processGetParameters(optionalGetParameters);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.accountInformation = {\r\n      nickname: ko.observable(\"\"),\r\n      email: ko.observable(\"\"),\r\n      activated: ko.observable(\"\"),\r\n    }\r\n\r\n  }\r\n\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onOpen(event) {\r\n    info(`Connected to server ${this.controller.socketConfig.url}`);\r\n    this.controller.connected(true);\r\n  }\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onClose(event) {\r\n    warn(\"Server closed connection.\")\r\n    this.controller.connected(false);\r\n  }\r\n  // Delegated to WebSocket object- dont use this, have to use - this.controller\r\n  onError(event) {\r\n    warn(\"Something wrong with connection.\")\r\n    this.controller.connected(false);\r\n  }\r\n\r\n  send(what) {\r\n    this.socketHandler.send(what);\r\n  }\r\n\r\n  subscribe(observableName, func) {\r\n    if(this[observableName]) {\r\n      this[observableName].subscribe(func);\r\n    }\r\n  }\r\n\r\n  msg(label) {\r\n    return this.messageService.msg(label);\r\n  }\r\n\r\n  processGetParameters(optionalGetParameters) {\r\n    if(optionalGetParameters.token != undefined) {\r\n      if(optionalGetParameters.nickname != undefined) {\r\n        this.communicationService.tryActivate(optionalGetParameters);\r\n      } else if(optionalGetParameters.email != undefined) {\r\n        this.communicationService.tryActivatePassword(optionalGetParameters);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Response } from '../communication/shared/Response';\r\nimport { WebClientAction } from '../communication/shared/WebClientAction';\r\nimport { makeDefaultToast } from '../views/utils/toaster';\r\nimport { warn } from '../logger/logger';\r\n\r\nexport class MessageController {\r\n  constructor(controller, messageService) {\r\n    this.controller = controller;\r\n    this.messageService = messageService;\r\n  }\r\n\r\n  onMessage(event) {\r\n    this.controller.messageController.recognizeEvent(event);\r\n  }\r\n\r\n  recognizeEvent(event) {\r\n    if(event.type === 'message') {\r\n      this.recognizeMessage(event);\r\n    }\r\n  }\r\n\r\n  recognizeMessage(event) {\r\n    let obj = JSON.parse(event.data);\r\n    if(obj.className !== 'undefined') {\r\n      this.recognizeClass(obj);\r\n    } else {\r\n      warn(\"Cannot understand: \" + event.data);\r\n    }\r\n  }\r\n\r\n  recognizeClass(object) {\r\n    if(object.className === 'Response') {\r\n      let response = new Response(object.type, object.description, object.notifyType, object.notifyState, object.args);\r\n      this.recognizeNotifier(response);\r\n    } else if(object.className === 'WebClientAction') {\r\n      let action = new WebClientAction(object.type, object.args);\r\n      this.recognizeAction(action);\r\n    } else {\r\n      if(object.className) {\r\n        warn(\"Cannot understand: \" + object.className);\r\n      }\r\n    }\r\n  }\r\n\r\n  recognizeNotifier(responseObject) {\r\n    if(responseObject.notifyType == \"TOAST\") {\r\n      makeDefaultToast(this.messageService.msg(responseObject.notifyState), this.messageService.msg(responseObject.description), responseObject.notifyState.toLowerCase());\r\n    }\r\n  }\r\n\r\n  recognizeAction(action) {\r\n    if(action.type === \"REFRESHUSERS\") {\r\n      this.controller.playersCount(action.args.players);\r\n    } else if(action.type === \"REFRESHMONEY\") {\r\n      this.controller.balance(action.args.money);\r\n    } else if(action.type === \"CHANGE_STATE\") {\r\n      this.controller.state(action.args.newState);\r\n    } else if(action.type === \"ACCOUNTINFORMATION\") {\r\n      this.controller.accountInformation.nickname(action.args.nickname);\r\n      this.controller.accountInformation.email(action.args.email);\r\n      this.controller.accountInformation.activated( action.args.activated);\r\n    }\r\n  }\r\n}\r\n","export const views = {\r\n  MAINMENU: {name: \"MAINMENU\", canvas: false},\r\n  ACCOUNT: {name: \"ACCOUNT\", canvas: false},\r\n  PAYMENTS: {name: \"PAYMENTS\", canvas: false},\r\n  BASKET: {name: \"BASKET\", canvas: true},\r\n  GUNNER: {name: \"GUNNER\", canvas: true},\r\n}\r\n\r\n\r\n\r\nexport class ViewController {\r\n  constructor(mainController) {\r\n    this.mainController = mainController;\r\n    this.currentView = ko.observable(views.MAINMENU);\r\n  }\r\n\r\n  switchView(newView) {\r\n    this.currentView(this.getProperlyEnumFromCode(newView));\r\n    if(this.currentView().canvas) {\r\n      let mainCanvas = document.getElementById(\"mainGame\");\r\n      let rendererOptions = {\r\n        antialiasing: false,\r\n        transparent: false,\r\n        resolution: window.devicePixelRatio,\r\n        autoResize: true,\r\n      }\r\n      let ratio = window.innerWidth / window.innerHeight;\r\n      let app = new PIXI.Application(window.innerWidth, window.innerHeight, {view: mainCanvas}, rendererOptions);\r\n      window.onresize = function(event) {\r\n          resize(app.renderer, ratio);\r\n      };\r\n    }\r\n  }\r\n\r\n   getProperlyEnumFromCode(enumCode) {\r\n     if(views.enumCode !== undefined) {\r\n       return views.enumCode;\r\n     } else {\r\n       return views[enumCode.toUpperCase()];\r\n     }\r\n   }\r\n}\r\n","export class DevService {\r\n  constructor(controller) {\r\n    let self = this;\r\n    this.controller = controller;\r\n    this.argName = ko.observable();\r\n    this.argValue = ko.observable();\r\n\r\n    this.devAction = ko.observable({\r\n      type: ko.observable(\"\"),\r\n      args: ko.observable({}),\r\n    });\r\n    this.devJson = ko.computed(function() {\r\n        return ko.toJSON(this.devAction());\r\n    }, this);\r\n\r\n    this.addArg = function() {\r\n      let current = self.devAction().args();\r\n      let index = self.argName();\r\n      current[index] = ko.observable(self.argValue());\r\n      self.devAction().args(current);\r\n    };\r\n    this.devArgs = ko.computed(function() {\r\n        let args = self.devAction().args();\r\n        return Object.keys(args);\r\n    }, this);\r\n    this.devSend = function() {\r\n      self.controller.send(self.devJson());\r\n    };\r\n    this.devValueFor = function(key) {\r\n      return self.devAction().args()[key];\r\n    }\r\n    this.removeArg = function(key) {\r\n      let current = self.devAction().args();\r\n      let index = key;\r\n      delete current[index];\r\n      self.devAction().args(current);\r\n    }\r\n    let randomString = this.randomString(8);\r\n\r\n    this.actions = [\r\n      { type: ko.observable(\"REGISTER\"), args: ko.observable({ login: ko.observable(randomString), password: ko.observable(randomString), email: ko.observable(\"\")})},\r\n      { type: ko.observable(\"LOGIN\"), args: ko.observable({ login: ko.observable(randomString), password: ko.observable(randomString)})},\r\n      { type: ko.observable(\"ACCOUNTACTIVATION\"), args: ko.observable({ token: ko.observable(\"\"), nickname: ko.observable(randomString)})},\r\n      { type: ko.observable(\"PASSWORDCHANGEREQUEST\"), args: ko.observable({ email: ko.observable(\"\"), newPassword: ko.observable(this.randomString(5))})},\r\n      { type: ko.observable(\"PASSWORDCHANGE\"), args: ko.observable({ email: ko.observable(\"\"), token: ko.observable(\"\")})},\r\n      { type: ko.observable(\"GUNFIRE\"), args: ko.observable({ bid: ko.observable(50)})},\r\n      { type: ko.observable(\"MYOWN\"), args: ko.observable({ })},\r\n\r\n    ]\r\n  }\r\n\r\n  randomString(length) {\r\n    return Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, length);\r\n  }\r\n}\r\n","export function log(what, color) {\r\n  if(color) {\r\n    console.log(\"%c\" + what, \"color: \" + color);\r\n  } else {\r\n    console.log(what);\r\n  }\r\n}\r\n\r\nexport function warn(what) {\r\n  return log(what, \"red\");\r\n}\r\n\r\nexport function info(what) {\r\n  return log(what, \"green\");\r\n}\r\n","\r\nexport class Component {\r\n  constructor(bindingName, template) {\r\n    this.bindingName = bindingName;\r\n    this.template = template;\r\n  }\r\n\r\n  registerComponent() {\r\n    ko.components.register(this.bindingName, { viewModel: this.viewModel, template: this.template });\r\n  }\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class AccountInformation extends Component {\r\n  constructor() {\r\n    super(\"accountinformation\", require('./AccountInformationTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.controller = params.controller;\r\n      this.msg = function(name) {\r\n        return this.controller.msg(name);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n    <form data-bind=\"submit: function() { }\" class=\"accountLoginForm\">\r\n        <header data-bind=\"text: msg('accountInformations')\"></header>\r\n        <div><span class=\"accountInformationLabel\" data-bind=\"text: msg('nickname')\"></span><span data-bind=\"text: controller.accountInformation.nickname\"></span></div>\r\n        <div><span class=\"accountInformationLabel\" data-bind=\"text: msg('email')\"></span><span data-bind=\"text: controller.accountInformation.email\"></span></div>\r\n        <div><span class=\"accountInformationLabel\" data-bind=\"text: msg('activated')\"></span><span data-bind=\"text: controller.accountInformation.activated\"></span></div>\r\n        <div><span class=\"accountInformationLabel\" data-bind=\"text: msg('balance')\"></span><span data-bind=\"text: controller.balance\"></span></div>\r\n    </form>\r\n  `,\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class AwesomeButtonLink extends Component {\r\n  constructor() {\r\n    super(\"awesomebuttonlink\", require('./AwesomeButtonLinkTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.awesomeClass = params.awesomeClass;\r\n      this.underText = params.underText;\r\n      this.disabled = params.disabled;\r\n      this.isDisabled = ko.computed(() => {\r\n        return this.disabled !== undefined && this.disabled();\r\n      }, this);\r\n      this.onClick = function(event) {\r\n        if(this.disabled !== undefined && this.disabled()) {\r\n          return undefined;\r\n        }\r\n        return params.onClick(event);\r\n      };\r\n      this.materialIcon = params.materialIcon;\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n  <div class=\"upperMenuItem\">\r\n    <i data-bind=\"css: awesomeClass, click: onClick, text: materialIcon, attr: { disabled: isDisabled }\"></i>\r\n    <div data-bind=\"text: underText, click: onClick, attr: { disabled: isDisabled }\"></div>\r\n  </div>\r\n  `,\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class CasinoView extends Component {\r\n  constructor() {\r\n    super(\"casinoview\", require('./CasinoViewTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.currentView = params.currentView;\r\n      this.controller = params.controller;\r\n      this.shouldShowCanvas = ko.computed(() => {\r\n        return this.currentView().canvas;\r\n      }, this);\r\n      this.msg = function(name) {\r\n        return this.controller.msg(name);\r\n      }\r\n\r\n      this.accountCurrentView = ko.observable(\"LOGIN\");\r\n\r\n      this.shouldShowLoginForm = ko.computed(() => {\r\n          return this.controller.isNotLogged() && this.accountCurrentView() == \"LOGIN\";\r\n      }, this);\r\n\r\n      this.shouldShowRegisterForm = ko.computed(() => {\r\n          return this.controller.isNotLogged() && this.accountCurrentView() == \"REGISTER\";\r\n      }, this);\r\n\r\n      this.shouldShowPasswordChangeForm = ko.computed(() => {\r\n          return this.controller.isNotLogged() && this.accountCurrentView() == \"PASSWORDCHANGE\";\r\n      }, this);\r\n\r\n      this.shouldShowAccountInformation = ko.computed(() => {\r\n          return !this.controller.isNotLogged();\r\n      }, this);\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n    <!-- ko if: shouldShowCanvas -->\r\n      <canvas id=\"mainGame\"></canvas>\r\n    <!-- /ko -->\r\n\r\n    <!-- ko ifnot: shouldShowCanvas -->\r\n      <!-- ko if: currentView().name == 'MAINMENU' -->\r\n        <span data-bind=\"text:currentView().name\" id=\"mainGame\"></span>\r\n      <!-- /ko -->\r\n      <!-- ko if: currentView().name == 'ACCOUNT' -->\r\n        <!-- ko if: shouldShowLoginForm -->\r\n          <loginform params=\"controller: controller, accountCurrentView: accountCurrentView\"></loginform>\r\n        <!-- /ko -->\r\n        <!-- ko if: shouldShowRegisterForm -->\r\n          <registerform params=\"controller: controller, accountCurrentView: accountCurrentView\"></registerform>\r\n        <!-- /ko -->\r\n        <!-- ko if: shouldShowPasswordChangeForm -->\r\n          <passwordchangeform params=\"controller: controller, accountCurrentView: accountCurrentView\"></passwordchangeform>\r\n        <!-- /ko -->\r\n        <!-- ko if: shouldShowAccountInformation -->\r\n          <accountinformation params=\"controller: controller\"></accountinformation>\r\n        <!-- /ko -->\r\n      <!-- /ko -->\r\n      <!-- ko if: currentView().name == 'PAYMENTS' -->\r\n        <span data-bind=\"text:currentView().name\" id=\"mainGame\"></span>\r\n      <!-- /ko -->\r\n    <!-- /ko -->\r\n  `,\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class LoginForm extends Component {\r\n  constructor() {\r\n    super(\"loginform\", require('./LoginFormTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.controller = params.controller;\r\n      this.accountCurrentView = params.accountCurrentView;\r\n      this.msg = function(name) {\r\n        return this.controller.msg(name);\r\n      }\r\n      this.loginForm = {\r\n        login: ko.observable(\"\"),\r\n        password: ko.observable(\"\"),\r\n      }\r\n      this.doLogin = function() {\r\n        this.controller.communicationService.tryLogin(this.loginForm.login(), this.loginForm.password());\r\n      }\r\n\r\n      this.onChangeLoginForm = function(state) {\r\n        return function() {\r\n          this.accountCurrentView(state);\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n    <form data-bind=\"submit: doLogin\" class=\"accountLoginForm\">\r\n        <header data-bind=\"text: msg('login')\"></header>\r\n        <label><span data-bind=\"text: msg('username')\"></span> <span>*</span></label>\r\n        <input data-bind=\"attr: {'placeholder' : msg('login')}, value: loginForm.login\"></input>\r\n        <div class=\"help\">At least 6 character</div>\r\n        <label><span data-bind=\"text: msg('password')\"></span> <span>*</span></label>\r\n        <input type=\"password\" data-bind=\"attr: {'placeholder' : msg('password')}, value: loginForm.password\"></input>\r\n        <div class=\"help\">Use upper and lowercase lettes as well</div>\r\n        <button data-bind=\"text: msg('login')\" type=\"submit\"></button>\r\n        <div data-bind=\"text: msg('clickHereIfYouWantToRegister'), click: onChangeLoginForm('REGISTER')\" class=\"help\"></div>\r\n        <div data-bind=\"text: msg('clickHereIfYouWantToChangePassword'), click: onChangeLoginForm('PASSWORDCHANGE')\" class=\"help\"></div>\r\n    </form>\r\n  `,\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class PasswordChangeForm extends Component {\r\n  constructor() {\r\n    super(\"passwordchangeform\", require('./PasswordChangeFormTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.controller = params.controller;\r\n      this.accountCurrentView = params.accountCurrentView;\r\n      this.msg = function(name) {\r\n        return this.controller.msg(name);\r\n      }\r\n\r\n      this.passwordChangeForm = {\r\n        email: ko.observable(\"\"),\r\n        newPassword: ko.observable(\"\"),\r\n      }\r\n\r\n      this.onChangeLoginForm = function(state) {\r\n        return function() {\r\n          this.accountCurrentView(state);\r\n        }\r\n      }\r\n\r\n      this.doPasswordChange = function() {\r\n        this.controller.communicationService.tryChangePassword(this.passwordChangeForm.email(), this.passwordChangeForm.newPassword());\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n    <form data-bind=\"submit: doPasswordChange\" class=\"accountLoginForm\">\r\n        <header data-bind=\"text: msg('passwordChange')\"></header>\r\n        <label><span data-bind=\"text: msg('email')\"></span> <span>*</span></label>\r\n        <input type=\"email\" data-bind=\"attr: {'placeholder' : msg('email')}, value: passwordChangeForm.email\"></input>\r\n        <div class=\"help\">At least 6 character</div>\r\n        <label><span data-bind=\"text: msg('newPassword')\"></span> <span>*</span></label>\r\n        <input type=\"password\" data-bind=\"attr: {'placeholder' : msg('password')}, value: passwordChangeForm.newPassword\"></input>\r\n        <div class=\"help\">Use upper and lowercase lettes as well</div>\r\n        <button data-bind=\"text: msg('sendRequest')\" type=\"submit\"></button>\r\n        <div data-bind=\"text: msg('clickHereIfYouWantToLogin'), click: onChangeLoginForm('LOGIN')\" class=\"help\"></div>\r\n    </form>\r\n  `,\r\n}\r\n","import { Component } from '../Component';\r\n\r\nexport class RegisterForm extends Component {\r\n  constructor() {\r\n    super(\"registerform\", require('./RegisterFormTemplate').template.html);\r\n    this.viewModel = function(params) {\r\n      this.controller = params.controller;\r\n      this.accountCurrentView = params.accountCurrentView;\r\n      this.msg = function(name) {\r\n        return this.controller.msg(name);\r\n      }\r\n\r\n      this.registerForm = {\r\n        login: ko.observable(\"\"),\r\n        password: ko.observable(\"\"),\r\n        email: ko.observable(\"\"),\r\n      }\r\n\r\n      this.onChangeLoginForm = function(state) {\r\n        return function() {\r\n          this.accountCurrentView(state);\r\n        }\r\n      }\r\n\r\n      this.doRegister = function() {\r\n        this.controller.communicationService.tryRegister(this.registerForm.login(), this.registerForm.password(), this.registerForm.email());\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","export const template = {\r\n  html: `\r\n    <form data-bind=\"submit: doRegister\" class=\"accountLoginForm\">\r\n        <header data-bind=\"text: msg('register')\"></header>\r\n        <label><span data-bind=\"text: msg('username')\"></span> <span>*</span></label>\r\n        <input data-bind=\"attr: {'placeholder' : msg('username')}, value: registerForm.login\"></input>\r\n        <div class=\"help\">At least 6 character</div>\r\n        <label><span data-bind=\"text: msg('password')\"></span> <span>*</span></label>\r\n        <input type=\"password\" data-bind=\"attr: {'placeholder' : msg('password')}, value: registerForm.password\"></input>\r\n        <div class=\"help\">Use upper and lowercase lettes as well</div>\r\n        <label><span data-bind=\"text: msg('email')\"></span> <span>*</span></label>\r\n        <input type=\"email\" data-bind=\"attr: {'placeholder' : msg('email')}, value: registerForm.email\"></input>\r\n        <div class=\"help\">Use upper and lowercase lettes as well</div>\r\n        <button data-bind=\"text: msg('register')\" type=\"submit\"></button>\r\n        <div data-bind=\"text: msg('clickHereIfYouWantToLogin'), click: onChangeLoginForm('LOGIN')\" class=\"help\"></div>\r\n    </form>\r\n  `,\r\n}\r\n","export function makeToast(heading, text, icon, hideAfter, position) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: icon,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: hideAfter > 0 ? hideAfter : false,\r\n    stack: 5,\r\n    position: position,\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makeDefaultToast(heading, text, icon) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: icon,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultInfoToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.information,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultSuccessToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.success,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultErrorToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.error,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport function makDefaultWarningToast(heading, text) {\r\n  $.toast({\r\n    text: text,\r\n    heading: heading,\r\n    icon: iconTypes.warning,\r\n    showHideTransition: 'fade',\r\n    allowToastClose: true,\r\n    hideAfter: 3000,\r\n    stack: 5,\r\n    position: 'bottom-left',\r\n\r\n    textAlign: 'left',\r\n    loader: true,\r\n    loaderBg: '#329CBF',\r\n  });\r\n}\r\n\r\nexport const iconTypes = {\r\n  error: 'error',\r\n  warning: 'warning',\r\n  success: 'success',\r\n  information: 'info',\r\n}\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}